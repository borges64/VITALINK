// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db" // Aqui estamos definindo o banco de dados SQLite para ser armazenado em um arquivo chamado dev.db
}


model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(MEDIC) // Correção aqui
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

  // Relacionamentos
  consultations ScheduledConsultation[]
  medicalLogs   MedicalLog[] 
}

model Patient {
  id          String   @id @default(uuid())
  name        String
  birthDate   DateTime
  medicalLogs MedicalLog[]
  consultations ScheduledConsultation[]
}

model ScheduledConsultation {
  id        String @id @default(uuid())
  doctor    User   @relation(fields: [doctorId], references: [id])
  doctorId  String
  patient   Patient @relation(fields: [patientId], references: [id])
  patientId String
  date      DateTime
  status    ConsultationStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MedicalLog {
  id          String   @id @default(uuid())
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
  doctor    User     @relation(fields: [doctorId], references: [id])
  doctorId  String
  description String
  type      LogType
  createdAt   DateTime @default(now())
}

enum Role {
  MEDIC
  ASSISTANT
  PATIENT
}

enum ConsultationStatus {
  SCHEDULED
  CANCELED
  COMPLETED
}

enum LogType {
  DIAGNOSIS
  EXAM
  ALLERGY
}